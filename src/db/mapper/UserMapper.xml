<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="db.dao.UserDao">
    <resultMap id="userMap" type="db.pojo.User">
		<result column="role_id" jdbcType="VARCHAR" property="roleId" />
		<result column="restaurant_id" jdbcType="VARCHAR" property="restaurantId" />
	</resultMap>
	<select id="selectByAccount"  resultType="db.pojo.User">
		select u.id, u.account, u.name, u.restaurant_id as restaurantId, u.role_id as roleId,
				u.password, u.phone, u.state
		from user u
		where account = #{account}  
	</select>
	<select id="selectById" parameterType="Integer"
		resultType="db.pojo.User">
		select u.id, u.account, u.name, u.restaurant_id as restaurantId, u.role_id as roleId,
				u.password, u.phone
		from user u
		where id = #{id}
	</select>
	<select id="selectRestaurantState" parameterType="Integer" resultType="Integer">
		select r.state
		from restaurant r
		where id = #{restaurantId}
	</select>
	
	<select id="selectRestaurantUser" resultType="Map">
		select u.id, u.account, u.name, u.password, u.phone, role.name roleName, role.id roleId
		from user u
		LEFT JOIN role on role.id = u.role_id
		where u.restaurant_id = #{restaurantId} 
		<if test="state != null">
         and u.state = #{state} 
         </if>
         <if test="type != null">
          and u.type = #{type}  
         </if>
		<if test="key != null">
         and (u.account like concat('%',#{key},'%') or u.name like concat('%',#{key},'%'))
         </if>
		ORDER BY
		<if test="page.sortName != null">
	     u.${page.sortName} ${page.sortOrder},
	    </if>
	    u.id desc
	    LIMIT #{page.start} , #{page.pageSize}
	</select>
	<select id="selectRestaurantUserCount" resultType="Integer">
		select count(u.id)
		from user u
		LEFT JOIN role on role.id = u.role_id
		where u.restaurant_id = #{restaurantId} 
		<if test="state != null">
         and u.state = #{state} 
         </if>
         <if test="type != null">
          and u.type = #{type}  
         </if>
		<if test="key != null">
         and (u.account like concat('%',#{key},'%') or u.name like concat('%',#{key},'%'))
         </if>
	</select>
	
	<insert id="insertUser" parameterType="db.pojo.User" useGeneratedKeys="true" keyProperty="id" >
	    INSERT INTO user (account, name, password, restaurant_id, role_id, phone, type) 
	    SELECT #{account}, #{name}, #{password}, #{restaurantId} , #{roleId}, #{phone}, #{type}
	    FROM DUAL 
		WHERE NOT EXISTS (SELECT account FROM user WHERE account = #{account} and restaurant_id = #{restaurantId} )
  </insert>
  
  <update id="updateUser" parameterType="db.pojo.User" >
	    UPDATE user 
	    <set> 
		  <if test="name != null">name = #{name},</if>
		  <if test="password != null">password = #{password},</if>
		  <if test="roleId != null">role_id = #{roleId},</if>
		  <if test="phone != null">phone = #{phone},</if>
		 </set>
		 WHERE id = #{id} and restaurant_id = #{restaurantId}
  </update>
  
  <delete id="deleteUser" parameterType="Map">
  	delete from user where id = #{id} and restaurant_id = #{restaurantId}
  </delete>
</mapper>